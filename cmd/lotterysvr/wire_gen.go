// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/google/wire"
	"lottery/internal/conf"
	"lottery/internal/data"
	"lottery/internal/server"
	"lottery/internal/service"
	"lottery/internal/task"
	"lottery/internal/usecase"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func initApp(confServer *conf.Server, confData *conf.Data) (*kratos.App, error) {
	db := data.NewDatabase(confData)
	client := data.NewCache(confData)
	dataData := data.NewData(db, client)
	prizeRepo := data.NewPrizeRepo(dataData)
	couponRepo := data.NewCouponRepo(dataData)
	blackUserRepo := data.NewBlackUserRepo(dataData)
	blackIpRepo := data.NewBlackIpRepo(dataData)
	resultRepo := data.NewResultRepo(dataData)
	lotteryCase := usecase.NewLotteryCase(prizeRepo, couponRepo, blackUserRepo, blackIpRepo, resultRepo)
	lotteryTimesRepo := data.NewLotteryTimesRepo(dataData)
	limitCase := usecase.NewLimitCase(blackUserRepo, blackIpRepo, lotteryTimesRepo)
	adminCase := usecase.NewAdminCase(prizeRepo, couponRepo, lotteryTimesRepo, resultRepo)
	lotteryService := service.NewLotteryService(lotteryCase, limitCase, adminCase)
	grpcServer := server.NewGRPCServer(confServer, lotteryService)
	adminService := service.NewAdminService(adminCase)
	httpServer := server.NewHTTPServer(confServer, lotteryService, adminService)
	taskServer := task.NewTaskServer(lotteryService, confServer)
	app := newApp(grpcServer, httpServer, taskServer)
	return app, nil
}

// wire.go:

var DataProviderSet = wire.NewSet(data.NewData, data.NewDatabase, data.NewCache, data.NewCouponRepo, data.NewPrizeRepo, data.NewResultRepo, data.NewBlackIpRepo, data.NewBlackUserRepo, data.NewLotteryTimesRepo)

var ServiceProviderSet = wire.NewSet(service.NewLotteryService, service.NewAdminService)

var UsecaseProviderSet = wire.NewSet(usecase.NewAdminCase, usecase.NewLotteryCase, usecase.NewLimitCase)

var SeverProviderSet = wire.NewSet(task.NewTaskServer, server.NewGRPCServer, server.NewHTTPServer)
